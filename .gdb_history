r
bt
quit
quit
r
print v
print l
call VectorList_print(l)
bt
print v
call printMatrix(v)
quit
<<<<<<< HEAD
b Supercode
b SupercodeDecoding 
r
b 299
c
b printf
c
bt
=======
b 30
r
print tree
print tree->l
print tree->r
print tree->key
print *(tree->key)
print *(int*)(tree->key)
quit
b 30
b addNode
r
c
c
print *(int*)key
print tree->l
print tree->r
print tree->key
quit
r
bt
quit
b SplitSyndrome.189
b SplitSyndrome+189
b SplitSyndrome
r
b 189
c
bt
quit
run
bt
print d1
print v1
print v2
print v1->data
print v2->data
quit
r
bt
b addNode
r
b 146
c
print tmp->key
print res
b 146
c
c
delete breakpoint 1
c
print key
print tmp->key
print res
print (BinMatri*)key
print (BinMatrix*)key
print ((BinMatrix*)key)->rows
print ((BinMatrix*)key)->cols
print ((BinMatrix*)key)->data
print ((BinMatrix*)tmp->key)->data
quit
quit
run
bt
quit
r
bt
print indexes
print indexes[0]
print indexes[1]
print m
quit
b SplitSyndrome.h:23
delete breakpoints 
quit
b Supercode.h:192 if new_dist==2
r
call printMatrix(*full_vector )
c
call printMatrix(*full_vector )
c
call printMatrix(*full_vector )
c
call printMatrix(*full_vector )
c
call printMatrix(*full_vector )
c
call printMatrix(*full_vector )
c
call printMatrix(*full_vector )
c
call printMatrix(*full_vector )
call printMatrix(*syndrome)
c
call printMatrix(*syndrome)
call printMatrix(*full_vector )
c
call printMatrix(*full_vector )
c
call printMatrix(*full_vector )
call printMatrix(*syndrome)
print new_dist 
delete breakpoints
c
quit
r
bt
b main.c:40
r
print info->w
print *syndrome
print *H
print *codeword
c
quit
quit
file main
r
bt
b SplitSyndrome
r
print H
call printMatrix(H)
call info->w
print info->w
bt
c
bt
b SplitSyndrome.h:333
r
print indexes
c
print indexes
print indexes[0]
print m
c
c
c
c
c
c
c
c
c
c
c
c
c
bt
quit
r
bt
b SplitSyndrome/SplitSyndrome.h:334
r
c
c
c
c
c
c
c
c
c
c
c
c
c
r
c
c
c
c
c
c
c
c
c
c
c
c
c
r
c
c
c
c
c
c
c
c
c
c
c
c
print *samples
print m
call printMatrix(*samples)
print m
print indexes[m-1]
print indexes[m]
print u
>>>>>>> Davide_develop
c
bt
quit
r
bt
quit
r
bt
quit
b generateCodeword 
r
b 163
print *G_rows_index 
call printSet(G_rows_index )
r
call printSet(G_rows_index )
r
print num_G_rows 
print k
print *k
print G
call printMatrix(G)
quit
b 24
r
b generateCodeword 
c
print G
print G->rows
print G->cols
c
quit
