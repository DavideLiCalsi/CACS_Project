print v1
print v2
print v1->data
print v2->data
quit
r
bt
b addNode
r
b 146
c
print tmp->key
print res
b 146
c
c
delete breakpoint 1
c
print key
print tmp->key
print res
print (BinMatri*)key
print (BinMatrix*)key
print ((BinMatrix*)key)->rows
print ((BinMatrix*)key)->cols
print ((BinMatrix*)key)->data
print ((BinMatrix*)tmp->key)->data
quit
quit
run
bt
quit
r
bt
print v1
print v2
print v2->data
print z
print *z
quit
file main
b findEqualSize_u_m 
r
b 45
c
print n
print m
print u
print t
print binomialCoeff(n-m,t-u)
print size_r
print size_r*(n-(m-1)-t)/(n-(m-1))
c
print binomialCoeff(n-m,t-u)
print size_r*(n-(m-1)-t)/(n-(m-1))
c
print size_r*(n-(m-1)-t)/(n-(m-1))
c
c
quit
quit
b findEqualSize_u_m 
c
r
print binCoefficients[n][1][1]
print binCoefficients[n][1][2]
print binCoefficients[n][1][3]
print binCoefficients[n][2][3]
quit
r
quit
r
print binCoefficients
print binCoefficients[42][8]
quit
r
print *el
print *er
bt
print e
print *e
call printMatrix(*el)
call printMatrix(*er)
quit
r
bt
print m
print *m
print temp
b VectorList_destroy
quit
b VectorList_destroy
r
VectorList_print(*l)
call VectorList_print(*l)
quit
r
bt
call VectorList_print(m)
call VectorList_print(*m)
r
call VectorList_print(*m)
b *VectorList_destroy
r
call VectorList_print(*l)
call VectorList_print(l)
r
call VectorList_print(l)
r
call VectorList_print(*l)
r
print *l
print **l
quit
r
print temp
print temp->v
print *temp->v
print temp
print *l
print temp->next
print old
print old->v
print *old->v
vmmap
print *(old->v)
r
quit
r
quit
quit
r
quit
r
quit
r
print z
call printMatrix(v1)
call printMatrix(v2)
call printMatrix(z)
print z
r
print z
quit
quit
r
bt
quit
r
bt
print vector
quit
r
print left
print lists[0]
print lists[1]
print lists[2]
print s
print len
print i
print K
print lists

print lists[0]->v
print vector
print list
print lists[0]
print i
print vector
call VectorList_print(list)
call VectorList_print(lists[0])
quit
r
print list
print vector
call VectorList_print(*list)
call VectorList_print(lists[i])
call VectorList_print(lists[0])
quit
c
r
print i
print vector
print lists[0]
quit
r
print i
print vector
quit
r
print vector
print lists[0]
quit
r
print temp
call VectorList_print(KGamma)
quit
b HammingDistance 
r
print m1
print m2
call printMatrix(m1)
call printMatrix(m2)
quit
b loopOverProjectionOnGamma 
r
b 132
c
print *final
print n
print gamma_len
quit
r
bt
print p
print ret
print p
print p->v
quit
b buildKGamma 
r
print lists[0]
print lists[1]
quit
b buildKGamma 
r
print lists[0]
print lists[1]
quit
b getInformationSet 
r
b 219
c
print gamma
quit
r
print p
print (VectorList) p
print p->v
print p->next
x/20wx p
vmmap
x/20wx p
quit
r
bt
quit
quit
r
print v
print l
call VectorList_print(l)
bt
print v
call printMatrix(v)
quit
