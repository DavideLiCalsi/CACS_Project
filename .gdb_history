print distance
c
print distance
c
print distance
c
print distance
c
print distance
c
print distance
c
print distance
c
print distance
print partial_sum
quit
b printMatrix 
r
bt
c
bt
c
bt
c
bt
quit
b printMatrix 
r
c
c
c
bt
quit
r
bt
quit
b comppute_e2
b compute_e2
r
b 27
print alpha
print delta_0 
print R
print delta_0 - alpha
print 0.5-(b-1)*v
print b
print b-1
print v
quit
quit
r
bt
quit
r
bt
b Supercode.h:538
r
VectorList_print(KGamma)
call VectorList_print(KGamma)
quit
r
bt
b Supercode.h:153
r
print H
print *H_t
c
quit
r
bt
quit
r
bt
quit
r
r
bt
b Supercode.h:168
r
print k
quit
q
r
bt
q
r
bt
q
r
bt
bt
q
r
bt
q
r
bt
print b
print i
print j
print a
quit
r
b Supercode.h:166
r
print r_indexes
print r_cnt
x/5wx r_cnt
x/5wx r_indexes 
x/5wx c_cnt
q
b Supercode.h:166
r
print row
print cow
print col
printi
print i
print (row >> 0)
print (row >> 1)
print (row >> 2)
print (row >> 2) & 1
x/5wx r_indexes 
x/5wx c_indexes 
quit
r
r
r
r
r
bt
quit
r
bt
q
r
bt
quit
b Supercode.h:313
r
print last_target 
q
b Supercode.h:314
r
call printMatrix(*last_target)
call printMatrix(*last_new_m)
call printMatrix(*new_m)
q
r
bt
quit
r
bt
q
r
bt
print new_guess
q
r
q
b BinaryMatrix.h:148
r
bt
print v1
print v2
q
r
bt
print test
call printMatrix(*test)
call printMatrix(m)
call printMatrix(*new_guess)
quit
r
print final
call printMtrix(*final)
call printMatrix(*final)
call printMatrix(*test)
call printMatrix(m)
q
r
bt
print x_left
print invertible
print *invertible
print *x_left
q
r
print eff_dim 
q
r
bt
q
b BinaryMatrix.h:592
r
print res
print res_tmp 
print res^res_tmp 
c
print res^res_tmp 
c
print i
c
print i
c
print i
print ulong
print ulong_needed
bt
r
c
c
c
c
bt
delete breakpoints
b BinaryMatrix.h:595
r
print res
q
b BinaryMatrix.h:595
r
print res
q
e
b BinaryMatrix.h:594
r
print res
call printMatrix(v1)
call printMatrix(v2)
call printMatrix(v1)
call printMatrix(*transpose(v1))
call printMatrix(*transpose(v2))
call printMatrix(v1)
q
b BinaryMatrix.h:590 if i==ulong_needed-1
r
print i
print ulong_needed 
print j
print and
print v1.data[i]
print v2.data[i]
print v2.data[i] & v1.data[i]
q
b addRows
r
b 726
c
print ulong_index1
print row_len
print ulong_index2
print bit_index1
print bit_index2
quit
